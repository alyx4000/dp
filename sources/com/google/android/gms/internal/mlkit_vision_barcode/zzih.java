package com.google.android.gms.internal.mlkit_vision_barcode;

import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import com.iterable.iterableapi.IterableConstants;
import java.io.IOException;

/* compiled from: com.google.android.gms:play-services-mlkit-barcode-scanning@@18.2.0 */
/* loaded from: classes3.dex */
final class zzih implements ObjectEncoder {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzih zza = new zzih();
    private static final FieldDescriptor zzaA;
    private static final FieldDescriptor zzaB;
    private static final FieldDescriptor zzaC;
    private static final FieldDescriptor zzaD;
    private static final FieldDescriptor zzaE;
    private static final FieldDescriptor zzaF;
    private static final FieldDescriptor zzaG;
    private static final FieldDescriptor zzaH;
    private static final FieldDescriptor zzaI;
    private static final FieldDescriptor zzaJ;
    private static final FieldDescriptor zzaK;
    private static final FieldDescriptor zzaL;
    private static final FieldDescriptor zzaM;
    private static final FieldDescriptor zzaN;
    private static final FieldDescriptor zzaO;
    private static final FieldDescriptor zzaP;
    private static final FieldDescriptor zzaQ;
    private static final FieldDescriptor zzaR;
    private static final FieldDescriptor zzaS;
    private static final FieldDescriptor zzaT;
    private static final FieldDescriptor zzaU;
    private static final FieldDescriptor zzaV;
    private static final FieldDescriptor zzaW;
    private static final FieldDescriptor zzaX;
    private static final FieldDescriptor zzaY;
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzag;
    private static final FieldDescriptor zzah;
    private static final FieldDescriptor zzai;
    private static final FieldDescriptor zzaj;
    private static final FieldDescriptor zzak;
    private static final FieldDescriptor zzal;
    private static final FieldDescriptor zzam;
    private static final FieldDescriptor zzan;
    private static final FieldDescriptor zzao;
    private static final FieldDescriptor zzap;
    private static final FieldDescriptor zzaq;
    private static final FieldDescriptor zzar;
    private static final FieldDescriptor zzas;
    private static final FieldDescriptor zzat;
    private static final FieldDescriptor zzau;
    private static final FieldDescriptor zzav;
    private static final FieldDescriptor zzaw;
    private static final FieldDescriptor zzax;
    private static final FieldDescriptor zzay;
    private static final FieldDescriptor zzaz;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzdg zzdgVar = new zzdg();
        zzdgVar.zza(1);
        zzb = builder.withProperty(zzdgVar.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder(IterableConstants.KEY_EVENT_NAME);
        zzdg zzdgVar2 = new zzdg();
        zzdgVar2.zza(2);
        zzc = builder2.withProperty(zzdgVar2.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzdg zzdgVar3 = new zzdg();
        zzdgVar3.zza(37);
        zzd = builder3.withProperty(zzdgVar3.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("clientType");
        zzdg zzdgVar4 = new zzdg();
        zzdgVar4.zza(61);
        zze = builder4.withProperty(zzdgVar4.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzdg zzdgVar5 = new zzdg();
        zzdgVar5.zza(3);
        zzf = builder5.withProperty(zzdgVar5.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzdg zzdgVar6 = new zzdg();
        zzdgVar6.zza(20);
        zzg = builder6.withProperty(zzdgVar6.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzdg zzdgVar7 = new zzdg();
        zzdgVar7.zza(4);
        zzh = builder7.withProperty(zzdgVar7.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzdg zzdgVar8 = new zzdg();
        zzdgVar8.zza(29);
        zzi = builder8.withProperty(zzdgVar8.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzdg zzdgVar9 = new zzdg();
        zzdgVar9.zza(5);
        zzj = builder9.withProperty(zzdgVar9.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzdg zzdgVar10 = new zzdg();
        zzdgVar10.zza(59);
        zzk = builder10.withProperty(zzdgVar10.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzdg zzdgVar11 = new zzdg();
        zzdgVar11.zza(6);
        zzl = builder11.withProperty(zzdgVar11.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceTextDetectionLoadLogEvent");
        zzdg zzdgVar12 = new zzdg();
        zzdgVar12.zza(79);
        zzm = builder12.withProperty(zzdgVar12.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzdg zzdgVar13 = new zzdg();
        zzdgVar13.zza(7);
        zzn = builder13.withProperty(zzdgVar13.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzdg zzdgVar14 = new zzdg();
        zzdgVar14.zza(58);
        zzo = builder14.withProperty(zzdgVar14.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzdg zzdgVar15 = new zzdg();
        zzdgVar15.zza(48);
        zzp = builder15.withProperty(zzdgVar15.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzdg zzdgVar16 = new zzdg();
        zzdgVar16.zza(49);
        zzq = builder16.withProperty(zzdgVar16.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzdg zzdgVar17 = new zzdg();
        zzdgVar17.zza(18);
        zzr = builder17.withProperty(zzdgVar17.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzdg zzdgVar18 = new zzdg();
        zzdgVar18.zza(26);
        zzs = builder18.withProperty(zzdgVar18.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzdg zzdgVar19 = new zzdg();
        zzdgVar19.zza(27);
        zzt = builder19.withProperty(zzdgVar19.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzdg zzdgVar20 = new zzdg();
        zzdgVar20.zza(28);
        zzu = builder20.withProperty(zzdgVar20.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzdg zzdgVar21 = new zzdg();
        zzdgVar21.zza(44);
        zzv = builder21.withProperty(zzdgVar21.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzdg zzdgVar22 = new zzdg();
        zzdgVar22.zza(45);
        zzw = builder22.withProperty(zzdgVar22.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzdg zzdgVar23 = new zzdg();
        zzdgVar23.zza(19);
        zzx = builder23.withProperty(zzdgVar23.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzdg zzdgVar24 = new zzdg();
        zzdgVar24.zza(21);
        zzy = builder24.withProperty(zzdgVar24.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzdg zzdgVar25 = new zzdg();
        zzdgVar25.zza(22);
        zzz = builder25.withProperty(zzdgVar25.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzdg zzdgVar26 = new zzdg();
        zzdgVar26.zza(8);
        zzA = builder26.withProperty(zzdgVar26.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzdg zzdgVar27 = new zzdg();
        zzdgVar27.zza(9);
        zzB = builder27.withProperty(zzdgVar27.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzdg zzdgVar28 = new zzdg();
        zzdgVar28.zza(10);
        zzC = builder28.withProperty(zzdgVar28.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzdg zzdgVar29 = new zzdg();
        zzdgVar29.zza(11);
        zzD = builder29.withProperty(zzdgVar29.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzdg zzdgVar30 = new zzdg();
        zzdgVar30.zza(12);
        zzE = builder30.withProperty(zzdgVar30.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzdg zzdgVar31 = new zzdg();
        zzdgVar31.zza(13);
        zzF = builder31.withProperty(zzdgVar31.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzdg zzdgVar32 = new zzdg();
        zzdgVar32.zza(14);
        zzG = builder32.withProperty(zzdgVar32.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzdg zzdgVar33 = new zzdg();
        zzdgVar33.zza(15);
        zzH = builder33.withProperty(zzdgVar33.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzdg zzdgVar34 = new zzdg();
        zzdgVar34.zza(16);
        zzI = builder34.withProperty(zzdgVar34.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzdg zzdgVar35 = new zzdg();
        zzdgVar35.zza(17);
        zzJ = builder35.withProperty(zzdgVar35.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzdg zzdgVar36 = new zzdg();
        zzdgVar36.zza(23);
        zzK = builder36.withProperty(zzdgVar36.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzdg zzdgVar37 = new zzdg();
        zzdgVar37.zza(24);
        zzL = builder37.withProperty(zzdgVar37.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzdg zzdgVar38 = new zzdg();
        zzdgVar38.zza(25);
        zzM = builder38.withProperty(zzdgVar38.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzdg zzdgVar39 = new zzdg();
        zzdgVar39.zza(39);
        zzN = builder39.withProperty(zzdgVar39.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("deleteModelLogEvent");
        zzdg zzdgVar40 = new zzdg();
        zzdgVar40.zza(40);
        zzO = builder40.withProperty(zzdgVar40.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzdg zzdgVar41 = new zzdg();
        zzdgVar41.zza(30);
        zzP = builder41.withProperty(zzdgVar41.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzdg zzdgVar42 = new zzdg();
        zzdgVar42.zza(31);
        zzQ = builder42.withProperty(zzdgVar42.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzdg zzdgVar43 = new zzdg();
        zzdgVar43.zza(32);
        zzR = builder43.withProperty(zzdgVar43.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzdg zzdgVar44 = new zzdg();
        zzdgVar44.zza(33);
        zzS = builder44.withProperty(zzdgVar44.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzdg zzdgVar45 = new zzdg();
        zzdgVar45.zza(34);
        zzT = builder45.withProperty(zzdgVar45.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzdg zzdgVar46 = new zzdg();
        zzdgVar46.zza(35);
        zzU = builder46.withProperty(zzdgVar46.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzdg zzdgVar47 = new zzdg();
        zzdgVar47.zza(36);
        zzV = builder47.withProperty(zzdgVar47.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzdg zzdgVar48 = new zzdg();
        zzdgVar48.zza(46);
        zzW = builder48.withProperty(zzdgVar48.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzdg zzdgVar49 = new zzdg();
        zzdgVar49.zza(47);
        zzX = builder49.withProperty(zzdgVar49.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("pipelineAccelerationInferenceEvents");
        zzdg zzdgVar50 = new zzdg();
        zzdgVar50.zza(69);
        zzY = builder50.withProperty(zzdgVar50.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzdg zzdgVar51 = new zzdg();
        zzdgVar51.zza(42);
        zzZ = builder51.withProperty(zzdgVar51.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzdg zzdgVar52 = new zzdg();
        zzdgVar52.zza(50);
        zzaa = builder52.withProperty(zzdgVar52.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("leakedHandleEvent");
        zzdg zzdgVar53 = new zzdg();
        zzdgVar53.zza(51);
        zzab = builder53.withProperty(zzdgVar53.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzdg zzdgVar54 = new zzdg();
        zzdgVar54.zza(52);
        zzac = builder54.withProperty(zzdgVar54.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzdg zzdgVar55 = new zzdg();
        zzdgVar55.zza(53);
        zzad = builder55.withProperty(zzdgVar55.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzdg zzdgVar56 = new zzdg();
        zzdgVar56.zza(54);
        zzae = builder56.withProperty(zzdgVar56.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzdg zzdgVar57 = new zzdg();
        zzdgVar57.zza(60);
        zzaf = builder57.withProperty(zzdgVar57.zzb()).build();
        FieldDescriptor.Builder builder58 = FieldDescriptor.builder("documentDetectionOptionalModuleLogEvent");
        zzdg zzdgVar58 = new zzdg();
        zzdgVar58.zza(85);
        zzag = builder58.withProperty(zzdgVar58.zzb()).build();
        FieldDescriptor.Builder builder59 = FieldDescriptor.builder("documentCroppingOptionalModuleLogEvent");
        zzdg zzdgVar59 = new zzdg();
        zzdgVar59.zza(86);
        zzah = builder59.withProperty(zzdgVar59.zzb()).build();
        FieldDescriptor.Builder builder60 = FieldDescriptor.builder("documentEnhancementOptionalModuleLogEvent");
        zzdg zzdgVar60 = new zzdg();
        zzdgVar60.zza(87);
        zzai = builder60.withProperty(zzdgVar60.zzb()).build();
        FieldDescriptor.Builder builder61 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzdg zzdgVar61 = new zzdg();
        zzdgVar61.zza(55);
        zzaj = builder61.withProperty(zzdgVar61.zzb()).build();
        FieldDescriptor.Builder builder62 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzdg zzdgVar62 = new zzdg();
        zzdgVar62.zza(56);
        zzak = builder62.withProperty(zzdgVar62.zzb()).build();
        FieldDescriptor.Builder builder63 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzdg zzdgVar63 = new zzdg();
        zzdgVar63.zza(57);
        zzal = builder63.withProperty(zzdgVar63.zzb()).build();
        FieldDescriptor.Builder builder64 = FieldDescriptor.builder("toxicityDetectionCreateEvent");
        zzdg zzdgVar64 = new zzdg();
        zzdgVar64.zza(62);
        zzam = builder64.withProperty(zzdgVar64.zzb()).build();
        FieldDescriptor.Builder builder65 = FieldDescriptor.builder("toxicityDetectionLoadEvent");
        zzdg zzdgVar65 = new zzdg();
        zzdgVar65.zza(63);
        zzan = builder65.withProperty(zzdgVar65.zzb()).build();
        FieldDescriptor.Builder builder66 = FieldDescriptor.builder("toxicityDetectionInferenceEvent");
        zzdg zzdgVar66 = new zzdg();
        zzdgVar66.zza(64);
        zzao = builder66.withProperty(zzdgVar66.zzb()).build();
        FieldDescriptor.Builder builder67 = FieldDescriptor.builder("barcodeDetectionOptionalModuleLogEvent");
        zzdg zzdgVar67 = new zzdg();
        zzdgVar67.zza(65);
        zzap = builder67.withProperty(zzdgVar67.zzb()).build();
        FieldDescriptor.Builder builder68 = FieldDescriptor.builder("customImageLabelOptionalModuleLogEvent");
        zzdg zzdgVar68 = new zzdg();
        zzdgVar68.zza(66);
        zzaq = builder68.withProperty(zzdgVar68.zzb()).build();
        FieldDescriptor.Builder builder69 = FieldDescriptor.builder("codeScannerScanApiEvent");
        zzdg zzdgVar69 = new zzdg();
        zzdgVar69.zza(67);
        zzar = builder69.withProperty(zzdgVar69.zzb()).build();
        FieldDescriptor.Builder builder70 = FieldDescriptor.builder("codeScannerOptionalModuleEvent");
        zzdg zzdgVar70 = new zzdg();
        zzdgVar70.zza(68);
        zzas = builder70.withProperty(zzdgVar70.zzb()).build();
        FieldDescriptor.Builder builder71 = FieldDescriptor.builder("onDeviceExplicitContentCreateLogEvent");
        zzdg zzdgVar71 = new zzdg();
        zzdgVar71.zza(70);
        zzat = builder71.withProperty(zzdgVar71.zzb()).build();
        FieldDescriptor.Builder builder72 = FieldDescriptor.builder("onDeviceExplicitContentLoadLogEvent");
        zzdg zzdgVar72 = new zzdg();
        zzdgVar72.zza(71);
        zzau = builder72.withProperty(zzdgVar72.zzb()).build();
        FieldDescriptor.Builder builder73 = FieldDescriptor.builder("onDeviceExplicitContentInferenceLogEvent");
        zzdg zzdgVar73 = new zzdg();
        zzdgVar73.zza(72);
        zzav = builder73.withProperty(zzdgVar73.zzb()).build();
        FieldDescriptor.Builder builder74 = FieldDescriptor.builder("aggregatedOnDeviceExplicitContentLogEvent");
        zzdg zzdgVar74 = new zzdg();
        zzdgVar74.zza(73);
        zzaw = builder74.withProperty(zzdgVar74.zzb()).build();
        FieldDescriptor.Builder builder75 = FieldDescriptor.builder("onDeviceFaceMeshCreateLogEvent");
        zzdg zzdgVar75 = new zzdg();
        zzdgVar75.zza(74);
        zzax = builder75.withProperty(zzdgVar75.zzb()).build();
        FieldDescriptor.Builder builder76 = FieldDescriptor.builder("onDeviceFaceMeshLoadLogEvent");
        zzdg zzdgVar76 = new zzdg();
        zzdgVar76.zza(75);
        zzay = builder76.withProperty(zzdgVar76.zzb()).build();
        FieldDescriptor.Builder builder77 = FieldDescriptor.builder("onDeviceFaceMeshLogEvent");
        zzdg zzdgVar77 = new zzdg();
        zzdgVar77.zza(76);
        zzaz = builder77.withProperty(zzdgVar77.zzb()).build();
        FieldDescriptor.Builder builder78 = FieldDescriptor.builder("aggregatedOnDeviceFaceMeshLogEvent");
        zzdg zzdgVar78 = new zzdg();
        zzdgVar78.zza(77);
        zzaA = builder78.withProperty(zzdgVar78.zzb()).build();
        FieldDescriptor.Builder builder79 = FieldDescriptor.builder("smartReplyOptionalModuleLogEvent");
        zzdg zzdgVar79 = new zzdg();
        zzdgVar79.zza(78);
        zzaB = builder79.withProperty(zzdgVar79.zzb()).build();
        FieldDescriptor.Builder builder80 = FieldDescriptor.builder("textDetectionOptionalModuleLogEvent");
        zzdg zzdgVar80 = new zzdg();
        zzdgVar80.zza(80);
        zzaC = builder80.withProperty(zzdgVar80.zzb()).build();
        FieldDescriptor.Builder builder81 = FieldDescriptor.builder("onDeviceImageQualityAnalysisCreateLogEvent");
        zzdg zzdgVar81 = new zzdg();
        zzdgVar81.zza(81);
        zzaD = builder81.withProperty(zzdgVar81.zzb()).build();
        FieldDescriptor.Builder builder82 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLoadLogEvent");
        zzdg zzdgVar82 = new zzdg();
        zzdgVar82.zza(82);
        zzaE = builder82.withProperty(zzdgVar82.zzb()).build();
        FieldDescriptor.Builder builder83 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLogEvent");
        zzdg zzdgVar83 = new zzdg();
        zzdgVar83.zza(83);
        zzaF = builder83.withProperty(zzdgVar83.zzb()).build();
        FieldDescriptor.Builder builder84 = FieldDescriptor.builder("aggregatedOnDeviceImageQualityAnalysisLogEvent");
        zzdg zzdgVar84 = new zzdg();
        zzdgVar84.zza(84);
        zzaG = builder84.withProperty(zzdgVar84.zzb()).build();
        FieldDescriptor.Builder builder85 = FieldDescriptor.builder("imageQualityAnalysisOptionalModuleLogEvent");
        zzdg zzdgVar85 = new zzdg();
        zzdgVar85.zza(88);
        zzaH = builder85.withProperty(zzdgVar85.zzb()).build();
        FieldDescriptor.Builder builder86 = FieldDescriptor.builder("imageCaptioningOptionalModuleLogEvent");
        zzdg zzdgVar86 = new zzdg();
        zzdgVar86.zza(89);
        zzaI = builder86.withProperty(zzdgVar86.zzb()).build();
        FieldDescriptor.Builder builder87 = FieldDescriptor.builder("onDeviceImageCaptioningCreateLogEvent");
        zzdg zzdgVar87 = new zzdg();
        zzdgVar87.zza(90);
        zzaJ = builder87.withProperty(zzdgVar87.zzb()).build();
        FieldDescriptor.Builder builder88 = FieldDescriptor.builder("onDeviceImageCaptioningLoadLogEvent");
        zzdg zzdgVar88 = new zzdg();
        zzdgVar88.zza(91);
        zzaK = builder88.withProperty(zzdgVar88.zzb()).build();
        FieldDescriptor.Builder builder89 = FieldDescriptor.builder("onDeviceImageCaptioningInferenceLogEvent");
        zzdg zzdgVar89 = new zzdg();
        zzdgVar89.zza(92);
        zzaL = builder89.withProperty(zzdgVar89.zzb()).build();
        FieldDescriptor.Builder builder90 = FieldDescriptor.builder("aggregatedOnDeviceImageCaptioningInferenceLogEvent");
        zzdg zzdgVar90 = new zzdg();
        zzdgVar90.zza(93);
        zzaM = builder90.withProperty(zzdgVar90.zzb()).build();
        FieldDescriptor.Builder builder91 = FieldDescriptor.builder("onDeviceDocumentDetectionCreateLogEvent");
        zzdg zzdgVar91 = new zzdg();
        zzdgVar91.zza(94);
        zzaN = builder91.withProperty(zzdgVar91.zzb()).build();
        FieldDescriptor.Builder builder92 = FieldDescriptor.builder("onDeviceDocumentDetectionLoadLogEvent");
        zzdg zzdgVar92 = new zzdg();
        zzdgVar92.zza(95);
        zzaO = builder92.withProperty(zzdgVar92.zzb()).build();
        FieldDescriptor.Builder builder93 = FieldDescriptor.builder("onDeviceDocumentDetectionLogEvent");
        zzdg zzdgVar93 = new zzdg();
        zzdgVar93.zza(96);
        zzaP = builder93.withProperty(zzdgVar93.zzb()).build();
        FieldDescriptor.Builder builder94 = FieldDescriptor.builder("aggregatedOnDeviceDocumentDetectionLogEvent");
        zzdg zzdgVar94 = new zzdg();
        zzdgVar94.zza(97);
        zzaQ = builder94.withProperty(zzdgVar94.zzb()).build();
        FieldDescriptor.Builder builder95 = FieldDescriptor.builder("onDeviceDocumentCroppingCreateLogEvent");
        zzdg zzdgVar95 = new zzdg();
        zzdgVar95.zza(98);
        zzaR = builder95.withProperty(zzdgVar95.zzb()).build();
        FieldDescriptor.Builder builder96 = FieldDescriptor.builder("onDeviceDocumentCroppingLoadLogEvent");
        zzdg zzdgVar96 = new zzdg();
        zzdgVar96.zza(99);
        zzaS = builder96.withProperty(zzdgVar96.zzb()).build();
        FieldDescriptor.Builder builder97 = FieldDescriptor.builder("onDeviceDocumentCroppingLogEvent");
        zzdg zzdgVar97 = new zzdg();
        zzdgVar97.zza(100);
        zzaT = builder97.withProperty(zzdgVar97.zzb()).build();
        FieldDescriptor.Builder builder98 = FieldDescriptor.builder("aggregatedOnDeviceDocumentCroppingLogEvent");
        zzdg zzdgVar98 = new zzdg();
        zzdgVar98.zza(101);
        zzaU = builder98.withProperty(zzdgVar98.zzb()).build();
        FieldDescriptor.Builder builder99 = FieldDescriptor.builder("onDeviceDocumentEnhancementCreateLogEvent");
        zzdg zzdgVar99 = new zzdg();
        zzdgVar99.zza(102);
        zzaV = builder99.withProperty(zzdgVar99.zzb()).build();
        FieldDescriptor.Builder builder100 = FieldDescriptor.builder("onDeviceDocumentEnhancementLoadLogEvent");
        zzdg zzdgVar100 = new zzdg();
        zzdgVar100.zza(103);
        zzaW = builder100.withProperty(zzdgVar100.zzb()).build();
        FieldDescriptor.Builder builder101 = FieldDescriptor.builder("onDeviceDocumentEnhancementLogEvent");
        zzdg zzdgVar101 = new zzdg();
        zzdgVar101.zza(104);
        zzaX = builder101.withProperty(zzdgVar101.zzb()).build();
        FieldDescriptor.Builder builder102 = FieldDescriptor.builder("aggregatedOnDeviceDocumentEnhancementLogEvent");
        zzdg zzdgVar102 = new zzdg();
        zzdgVar102.zza(105);
        zzaY = builder102.withProperty(zzdgVar102.zzb()).build();
    }

    private zzih() {
    }

    @Override // com.google.firebase.encoders.Encoder
    public final /* bridge */ /* synthetic */ void encode(Object obj, ObjectEncoderContext objectEncoderContext) throws IOException {
        zznh zznhVar = (zznh) obj;
        ObjectEncoderContext objectEncoderContext2 = objectEncoderContext;
        objectEncoderContext2.add(zzb, zznhVar.zzf());
        objectEncoderContext2.add(zzc, zznhVar.zzc());
        objectEncoderContext2.add(zzd, (Object) null);
        objectEncoderContext2.add(zze, zznhVar.zzb());
        objectEncoderContext2.add(zzf, (Object) null);
        objectEncoderContext2.add(zzg, (Object) null);
        objectEncoderContext2.add(zzh, (Object) null);
        objectEncoderContext2.add(zzi, (Object) null);
        objectEncoderContext2.add(zzj, (Object) null);
        objectEncoderContext2.add(zzk, (Object) null);
        objectEncoderContext2.add(zzl, (Object) null);
        objectEncoderContext2.add(zzm, (Object) null);
        objectEncoderContext2.add(zzn, zznhVar.zzd());
        objectEncoderContext2.add(zzo, zznhVar.zze());
        objectEncoderContext2.add(zzp, (Object) null);
        objectEncoderContext2.add(zzq, (Object) null);
        objectEncoderContext2.add(zzr, (Object) null);
        objectEncoderContext2.add(zzs, (Object) null);
        objectEncoderContext2.add(zzt, (Object) null);
        objectEncoderContext2.add(zzu, (Object) null);
        objectEncoderContext2.add(zzv, (Object) null);
        objectEncoderContext2.add(zzw, (Object) null);
        objectEncoderContext2.add(zzx, (Object) null);
        objectEncoderContext2.add(zzy, (Object) null);
        objectEncoderContext2.add(zzz, (Object) null);
        objectEncoderContext2.add(zzA, (Object) null);
        objectEncoderContext2.add(zzB, (Object) null);
        objectEncoderContext2.add(zzC, (Object) null);
        objectEncoderContext2.add(zzD, (Object) null);
        objectEncoderContext2.add(zzE, (Object) null);
        objectEncoderContext2.add(zzF, (Object) null);
        objectEncoderContext2.add(zzG, (Object) null);
        objectEncoderContext2.add(zzH, (Object) null);
        objectEncoderContext2.add(zzI, (Object) null);
        objectEncoderContext2.add(zzJ, (Object) null);
        objectEncoderContext2.add(zzK, (Object) null);
        objectEncoderContext2.add(zzL, (Object) null);
        objectEncoderContext2.add(zzM, (Object) null);
        objectEncoderContext2.add(zzN, (Object) null);
        objectEncoderContext2.add(zzO, (Object) null);
        objectEncoderContext2.add(zzP, (Object) null);
        objectEncoderContext2.add(zzQ, (Object) null);
        objectEncoderContext2.add(zzR, (Object) null);
        objectEncoderContext2.add(zzS, zznhVar.zza());
        objectEncoderContext2.add(zzT, (Object) null);
        objectEncoderContext2.add(zzU, (Object) null);
        objectEncoderContext2.add(zzV, (Object) null);
        objectEncoderContext2.add(zzW, (Object) null);
        objectEncoderContext2.add(zzX, (Object) null);
        objectEncoderContext2.add(zzY, (Object) null);
        objectEncoderContext2.add(zzZ, (Object) null);
        objectEncoderContext2.add(zzaa, (Object) null);
        objectEncoderContext2.add(zzab, (Object) null);
        objectEncoderContext2.add(zzac, (Object) null);
        objectEncoderContext2.add(zzad, (Object) null);
        objectEncoderContext2.add(zzae, (Object) null);
        objectEncoderContext2.add(zzaf, (Object) null);
        objectEncoderContext2.add(zzag, (Object) null);
        objectEncoderContext2.add(zzah, (Object) null);
        objectEncoderContext2.add(zzai, (Object) null);
        objectEncoderContext2.add(zzaj, (Object) null);
        objectEncoderContext2.add(zzak, (Object) null);
        objectEncoderContext2.add(zzal, (Object) null);
        objectEncoderContext2.add(zzam, (Object) null);
        objectEncoderContext2.add(zzan, (Object) null);
        objectEncoderContext2.add(zzao, (Object) null);
        objectEncoderContext2.add(zzap, (Object) null);
        objectEncoderContext2.add(zzaq, (Object) null);
        objectEncoderContext2.add(zzar, (Object) null);
        objectEncoderContext2.add(zzas, (Object) null);
        objectEncoderContext2.add(zzat, (Object) null);
        objectEncoderContext2.add(zzau, (Object) null);
        objectEncoderContext2.add(zzav, (Object) null);
        objectEncoderContext2.add(zzaw, (Object) null);
        objectEncoderContext2.add(zzax, (Object) null);
        objectEncoderContext2.add(zzay, (Object) null);
        objectEncoderContext2.add(zzaz, (Object) null);
        objectEncoderContext2.add(zzaA, (Object) null);
        objectEncoderContext2.add(zzaB, (Object) null);
        objectEncoderContext2.add(zzaC, (Object) null);
        objectEncoderContext2.add(zzaD, (Object) null);
        objectEncoderContext2.add(zzaE, (Object) null);
        objectEncoderContext2.add(zzaF, (Object) null);
        objectEncoderContext2.add(zzaG, (Object) null);
        objectEncoderContext2.add(zzaH, (Object) null);
        objectEncoderContext2.add(zzaI, (Object) null);
        objectEncoderContext2.add(zzaJ, (Object) null);
        objectEncoderContext2.add(zzaK, (Object) null);
        objectEncoderContext2.add(zzaL, (Object) null);
        objectEncoderContext2.add(zzaM, (Object) null);
        objectEncoderContext2.add(zzaN, (Object) null);
        objectEncoderContext2.add(zzaO, (Object) null);
        objectEncoderContext2.add(zzaP, (Object) null);
        objectEncoderContext2.add(zzaQ, (Object) null);
        objectEncoderContext2.add(zzaR, (Object) null);
        objectEncoderContext2.add(zzaS, (Object) null);
        objectEncoderContext2.add(zzaT, (Object) null);
        objectEncoderContext2.add(zzaU, (Object) null);
        objectEncoderContext2.add(zzaV, (Object) null);
        objectEncoderContext2.add(zzaW, (Object) null);
        objectEncoderContext2.add(zzaX, (Object) null);
        objectEncoderContext2.add(zzaY, (Object) null);
    }
}
