package com.google.android.gms.internal.mlkit_common;

import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import com.iterable.iterableapi.IterableConstants;
import java.io.IOException;

/* compiled from: com.google.mlkit:common@@18.8.0 */
/* loaded from: classes3.dex */
final class zzgh implements ObjectEncoder {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzgh zza = new zzgh();
    private static final FieldDescriptor zzaA;
    private static final FieldDescriptor zzaB;
    private static final FieldDescriptor zzaC;
    private static final FieldDescriptor zzaD;
    private static final FieldDescriptor zzaE;
    private static final FieldDescriptor zzaF;
    private static final FieldDescriptor zzaG;
    private static final FieldDescriptor zzaH;
    private static final FieldDescriptor zzaI;
    private static final FieldDescriptor zzaJ;
    private static final FieldDescriptor zzaK;
    private static final FieldDescriptor zzaL;
    private static final FieldDescriptor zzaM;
    private static final FieldDescriptor zzaN;
    private static final FieldDescriptor zzaO;
    private static final FieldDescriptor zzaP;
    private static final FieldDescriptor zzaQ;
    private static final FieldDescriptor zzaR;
    private static final FieldDescriptor zzaS;
    private static final FieldDescriptor zzaT;
    private static final FieldDescriptor zzaU;
    private static final FieldDescriptor zzaV;
    private static final FieldDescriptor zzaW;
    private static final FieldDescriptor zzaX;
    private static final FieldDescriptor zzaY;
    private static final FieldDescriptor zzaZ;
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzag;
    private static final FieldDescriptor zzah;
    private static final FieldDescriptor zzai;
    private static final FieldDescriptor zzaj;
    private static final FieldDescriptor zzak;
    private static final FieldDescriptor zzal;
    private static final FieldDescriptor zzam;
    private static final FieldDescriptor zzan;
    private static final FieldDescriptor zzao;
    private static final FieldDescriptor zzap;
    private static final FieldDescriptor zzaq;
    private static final FieldDescriptor zzar;
    private static final FieldDescriptor zzas;
    private static final FieldDescriptor zzat;
    private static final FieldDescriptor zzau;
    private static final FieldDescriptor zzav;
    private static final FieldDescriptor zzaw;
    private static final FieldDescriptor zzax;
    private static final FieldDescriptor zzay;
    private static final FieldDescriptor zzaz;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzbk zzbkVar = new zzbk();
        zzbkVar.zza(1);
        zzb = builder.withProperty(zzbkVar.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder(IterableConstants.KEY_EVENT_NAME);
        zzbk zzbkVar2 = new zzbk();
        zzbkVar2.zza(2);
        zzc = builder2.withProperty(zzbkVar2.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzbk zzbkVar3 = new zzbk();
        zzbkVar3.zza(37);
        zzd = builder3.withProperty(zzbkVar3.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("clientType");
        zzbk zzbkVar4 = new zzbk();
        zzbkVar4.zza(61);
        zze = builder4.withProperty(zzbkVar4.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzbk zzbkVar5 = new zzbk();
        zzbkVar5.zza(3);
        zzf = builder5.withProperty(zzbkVar5.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzbk zzbkVar6 = new zzbk();
        zzbkVar6.zza(20);
        zzg = builder6.withProperty(zzbkVar6.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzbk zzbkVar7 = new zzbk();
        zzbkVar7.zza(4);
        zzh = builder7.withProperty(zzbkVar7.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzbk zzbkVar8 = new zzbk();
        zzbkVar8.zza(29);
        zzi = builder8.withProperty(zzbkVar8.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzbk zzbkVar9 = new zzbk();
        zzbkVar9.zza(5);
        zzj = builder9.withProperty(zzbkVar9.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzbk zzbkVar10 = new zzbk();
        zzbkVar10.zza(59);
        zzk = builder10.withProperty(zzbkVar10.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzbk zzbkVar11 = new zzbk();
        zzbkVar11.zza(6);
        zzl = builder11.withProperty(zzbkVar11.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceTextDetectionLoadLogEvent");
        zzbk zzbkVar12 = new zzbk();
        zzbkVar12.zza(79);
        zzm = builder12.withProperty(zzbkVar12.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzbk zzbkVar13 = new zzbk();
        zzbkVar13.zza(7);
        zzn = builder13.withProperty(zzbkVar13.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzbk zzbkVar14 = new zzbk();
        zzbkVar14.zza(58);
        zzo = builder14.withProperty(zzbkVar14.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzbk zzbkVar15 = new zzbk();
        zzbkVar15.zza(48);
        zzp = builder15.withProperty(zzbkVar15.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzbk zzbkVar16 = new zzbk();
        zzbkVar16.zza(49);
        zzq = builder16.withProperty(zzbkVar16.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzbk zzbkVar17 = new zzbk();
        zzbkVar17.zza(18);
        zzr = builder17.withProperty(zzbkVar17.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzbk zzbkVar18 = new zzbk();
        zzbkVar18.zza(26);
        zzs = builder18.withProperty(zzbkVar18.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzbk zzbkVar19 = new zzbk();
        zzbkVar19.zza(27);
        zzt = builder19.withProperty(zzbkVar19.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzbk zzbkVar20 = new zzbk();
        zzbkVar20.zza(28);
        zzu = builder20.withProperty(zzbkVar20.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzbk zzbkVar21 = new zzbk();
        zzbkVar21.zza(44);
        zzv = builder21.withProperty(zzbkVar21.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzbk zzbkVar22 = new zzbk();
        zzbkVar22.zza(45);
        zzw = builder22.withProperty(zzbkVar22.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzbk zzbkVar23 = new zzbk();
        zzbkVar23.zza(19);
        zzx = builder23.withProperty(zzbkVar23.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzbk zzbkVar24 = new zzbk();
        zzbkVar24.zza(21);
        zzy = builder24.withProperty(zzbkVar24.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzbk zzbkVar25 = new zzbk();
        zzbkVar25.zza(22);
        zzz = builder25.withProperty(zzbkVar25.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzbk zzbkVar26 = new zzbk();
        zzbkVar26.zza(8);
        zzA = builder26.withProperty(zzbkVar26.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzbk zzbkVar27 = new zzbk();
        zzbkVar27.zza(9);
        zzB = builder27.withProperty(zzbkVar27.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzbk zzbkVar28 = new zzbk();
        zzbkVar28.zza(10);
        zzC = builder28.withProperty(zzbkVar28.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzbk zzbkVar29 = new zzbk();
        zzbkVar29.zza(11);
        zzD = builder29.withProperty(zzbkVar29.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzbk zzbkVar30 = new zzbk();
        zzbkVar30.zza(12);
        zzE = builder30.withProperty(zzbkVar30.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzbk zzbkVar31 = new zzbk();
        zzbkVar31.zza(13);
        zzF = builder31.withProperty(zzbkVar31.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzbk zzbkVar32 = new zzbk();
        zzbkVar32.zza(14);
        zzG = builder32.withProperty(zzbkVar32.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzbk zzbkVar33 = new zzbk();
        zzbkVar33.zza(15);
        zzH = builder33.withProperty(zzbkVar33.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzbk zzbkVar34 = new zzbk();
        zzbkVar34.zza(16);
        zzI = builder34.withProperty(zzbkVar34.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzbk zzbkVar35 = new zzbk();
        zzbkVar35.zza(17);
        zzJ = builder35.withProperty(zzbkVar35.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzbk zzbkVar36 = new zzbk();
        zzbkVar36.zza(23);
        zzK = builder36.withProperty(zzbkVar36.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzbk zzbkVar37 = new zzbk();
        zzbkVar37.zza(24);
        zzL = builder37.withProperty(zzbkVar37.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzbk zzbkVar38 = new zzbk();
        zzbkVar38.zza(25);
        zzM = builder38.withProperty(zzbkVar38.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzbk zzbkVar39 = new zzbk();
        zzbkVar39.zza(39);
        zzN = builder39.withProperty(zzbkVar39.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("deleteModelLogEvent");
        zzbk zzbkVar40 = new zzbk();
        zzbkVar40.zza(40);
        zzO = builder40.withProperty(zzbkVar40.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzbk zzbkVar41 = new zzbk();
        zzbkVar41.zza(30);
        zzP = builder41.withProperty(zzbkVar41.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzbk zzbkVar42 = new zzbk();
        zzbkVar42.zza(31);
        zzQ = builder42.withProperty(zzbkVar42.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzbk zzbkVar43 = new zzbk();
        zzbkVar43.zza(32);
        zzR = builder43.withProperty(zzbkVar43.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzbk zzbkVar44 = new zzbk();
        zzbkVar44.zza(33);
        zzS = builder44.withProperty(zzbkVar44.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzbk zzbkVar45 = new zzbk();
        zzbkVar45.zza(34);
        zzT = builder45.withProperty(zzbkVar45.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzbk zzbkVar46 = new zzbk();
        zzbkVar46.zza(35);
        zzU = builder46.withProperty(zzbkVar46.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzbk zzbkVar47 = new zzbk();
        zzbkVar47.zza(36);
        zzV = builder47.withProperty(zzbkVar47.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzbk zzbkVar48 = new zzbk();
        zzbkVar48.zza(46);
        zzW = builder48.withProperty(zzbkVar48.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzbk zzbkVar49 = new zzbk();
        zzbkVar49.zza(47);
        zzX = builder49.withProperty(zzbkVar49.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("pipelineAccelerationInferenceEvents");
        zzbk zzbkVar50 = new zzbk();
        zzbkVar50.zza(69);
        zzY = builder50.withProperty(zzbkVar50.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzbk zzbkVar51 = new zzbk();
        zzbkVar51.zza(42);
        zzZ = builder51.withProperty(zzbkVar51.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzbk zzbkVar52 = new zzbk();
        zzbkVar52.zza(50);
        zzaa = builder52.withProperty(zzbkVar52.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("leakedHandleEvent");
        zzbk zzbkVar53 = new zzbk();
        zzbkVar53.zza(51);
        zzab = builder53.withProperty(zzbkVar53.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzbk zzbkVar54 = new zzbk();
        zzbkVar54.zza(52);
        zzac = builder54.withProperty(zzbkVar54.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzbk zzbkVar55 = new zzbk();
        zzbkVar55.zza(53);
        zzad = builder55.withProperty(zzbkVar55.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzbk zzbkVar56 = new zzbk();
        zzbkVar56.zza(54);
        zzae = builder56.withProperty(zzbkVar56.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzbk zzbkVar57 = new zzbk();
        zzbkVar57.zza(60);
        zzaf = builder57.withProperty(zzbkVar57.zzb()).build();
        FieldDescriptor.Builder builder58 = FieldDescriptor.builder("documentDetectionOptionalModuleLogEvent");
        zzbk zzbkVar58 = new zzbk();
        zzbkVar58.zza(85);
        zzag = builder58.withProperty(zzbkVar58.zzb()).build();
        FieldDescriptor.Builder builder59 = FieldDescriptor.builder("documentCroppingOptionalModuleLogEvent");
        zzbk zzbkVar59 = new zzbk();
        zzbkVar59.zza(86);
        zzah = builder59.withProperty(zzbkVar59.zzb()).build();
        FieldDescriptor.Builder builder60 = FieldDescriptor.builder("documentEnhancementOptionalModuleLogEvent");
        zzbk zzbkVar60 = new zzbk();
        zzbkVar60.zza(87);
        zzai = builder60.withProperty(zzbkVar60.zzb()).build();
        FieldDescriptor.Builder builder61 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzbk zzbkVar61 = new zzbk();
        zzbkVar61.zza(55);
        zzaj = builder61.withProperty(zzbkVar61.zzb()).build();
        FieldDescriptor.Builder builder62 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzbk zzbkVar62 = new zzbk();
        zzbkVar62.zza(56);
        zzak = builder62.withProperty(zzbkVar62.zzb()).build();
        FieldDescriptor.Builder builder63 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzbk zzbkVar63 = new zzbk();
        zzbkVar63.zza(57);
        zzal = builder63.withProperty(zzbkVar63.zzb()).build();
        FieldDescriptor.Builder builder64 = FieldDescriptor.builder("toxicityDetectionCreateEvent");
        zzbk zzbkVar64 = new zzbk();
        zzbkVar64.zza(62);
        zzam = builder64.withProperty(zzbkVar64.zzb()).build();
        FieldDescriptor.Builder builder65 = FieldDescriptor.builder("toxicityDetectionLoadEvent");
        zzbk zzbkVar65 = new zzbk();
        zzbkVar65.zza(63);
        zzan = builder65.withProperty(zzbkVar65.zzb()).build();
        FieldDescriptor.Builder builder66 = FieldDescriptor.builder("toxicityDetectionInferenceEvent");
        zzbk zzbkVar66 = new zzbk();
        zzbkVar66.zza(64);
        zzao = builder66.withProperty(zzbkVar66.zzb()).build();
        FieldDescriptor.Builder builder67 = FieldDescriptor.builder("barcodeDetectionOptionalModuleLogEvent");
        zzbk zzbkVar67 = new zzbk();
        zzbkVar67.zza(65);
        zzap = builder67.withProperty(zzbkVar67.zzb()).build();
        FieldDescriptor.Builder builder68 = FieldDescriptor.builder("customImageLabelOptionalModuleLogEvent");
        zzbk zzbkVar68 = new zzbk();
        zzbkVar68.zza(66);
        zzaq = builder68.withProperty(zzbkVar68.zzb()).build();
        FieldDescriptor.Builder builder69 = FieldDescriptor.builder("codeScannerScanApiEvent");
        zzbk zzbkVar69 = new zzbk();
        zzbkVar69.zza(67);
        zzar = builder69.withProperty(zzbkVar69.zzb()).build();
        FieldDescriptor.Builder builder70 = FieldDescriptor.builder("codeScannerOptionalModuleEvent");
        zzbk zzbkVar70 = new zzbk();
        zzbkVar70.zza(68);
        zzas = builder70.withProperty(zzbkVar70.zzb()).build();
        FieldDescriptor.Builder builder71 = FieldDescriptor.builder("onDeviceExplicitContentCreateLogEvent");
        zzbk zzbkVar71 = new zzbk();
        zzbkVar71.zza(70);
        zzat = builder71.withProperty(zzbkVar71.zzb()).build();
        FieldDescriptor.Builder builder72 = FieldDescriptor.builder("onDeviceExplicitContentLoadLogEvent");
        zzbk zzbkVar72 = new zzbk();
        zzbkVar72.zza(71);
        zzau = builder72.withProperty(zzbkVar72.zzb()).build();
        FieldDescriptor.Builder builder73 = FieldDescriptor.builder("onDeviceExplicitContentInferenceLogEvent");
        zzbk zzbkVar73 = new zzbk();
        zzbkVar73.zza(72);
        zzav = builder73.withProperty(zzbkVar73.zzb()).build();
        FieldDescriptor.Builder builder74 = FieldDescriptor.builder("aggregatedOnDeviceExplicitContentLogEvent");
        zzbk zzbkVar74 = new zzbk();
        zzbkVar74.zza(73);
        zzaw = builder74.withProperty(zzbkVar74.zzb()).build();
        FieldDescriptor.Builder builder75 = FieldDescriptor.builder("onDeviceFaceMeshCreateLogEvent");
        zzbk zzbkVar75 = new zzbk();
        zzbkVar75.zza(74);
        zzax = builder75.withProperty(zzbkVar75.zzb()).build();
        FieldDescriptor.Builder builder76 = FieldDescriptor.builder("onDeviceFaceMeshLoadLogEvent");
        zzbk zzbkVar76 = new zzbk();
        zzbkVar76.zza(75);
        zzay = builder76.withProperty(zzbkVar76.zzb()).build();
        FieldDescriptor.Builder builder77 = FieldDescriptor.builder("onDeviceFaceMeshLogEvent");
        zzbk zzbkVar77 = new zzbk();
        zzbkVar77.zza(76);
        zzaz = builder77.withProperty(zzbkVar77.zzb()).build();
        FieldDescriptor.Builder builder78 = FieldDescriptor.builder("aggregatedOnDeviceFaceMeshLogEvent");
        zzbk zzbkVar78 = new zzbk();
        zzbkVar78.zza(77);
        zzaA = builder78.withProperty(zzbkVar78.zzb()).build();
        FieldDescriptor.Builder builder79 = FieldDescriptor.builder("smartReplyOptionalModuleLogEvent");
        zzbk zzbkVar79 = new zzbk();
        zzbkVar79.zza(78);
        zzaB = builder79.withProperty(zzbkVar79.zzb()).build();
        FieldDescriptor.Builder builder80 = FieldDescriptor.builder("textDetectionOptionalModuleLogEvent");
        zzbk zzbkVar80 = new zzbk();
        zzbkVar80.zza(80);
        zzaC = builder80.withProperty(zzbkVar80.zzb()).build();
        FieldDescriptor.Builder builder81 = FieldDescriptor.builder("onDeviceImageQualityAnalysisCreateLogEvent");
        zzbk zzbkVar81 = new zzbk();
        zzbkVar81.zza(81);
        zzaD = builder81.withProperty(zzbkVar81.zzb()).build();
        FieldDescriptor.Builder builder82 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLoadLogEvent");
        zzbk zzbkVar82 = new zzbk();
        zzbkVar82.zza(82);
        zzaE = builder82.withProperty(zzbkVar82.zzb()).build();
        FieldDescriptor.Builder builder83 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLogEvent");
        zzbk zzbkVar83 = new zzbk();
        zzbkVar83.zza(83);
        zzaF = builder83.withProperty(zzbkVar83.zzb()).build();
        FieldDescriptor.Builder builder84 = FieldDescriptor.builder("aggregatedOnDeviceImageQualityAnalysisLogEvent");
        zzbk zzbkVar84 = new zzbk();
        zzbkVar84.zza(84);
        zzaG = builder84.withProperty(zzbkVar84.zzb()).build();
        FieldDescriptor.Builder builder85 = FieldDescriptor.builder("imageQualityAnalysisOptionalModuleLogEvent");
        zzbk zzbkVar85 = new zzbk();
        zzbkVar85.zza(88);
        zzaH = builder85.withProperty(zzbkVar85.zzb()).build();
        FieldDescriptor.Builder builder86 = FieldDescriptor.builder("imageCaptioningOptionalModuleLogEvent");
        zzbk zzbkVar86 = new zzbk();
        zzbkVar86.zza(89);
        zzaI = builder86.withProperty(zzbkVar86.zzb()).build();
        FieldDescriptor.Builder builder87 = FieldDescriptor.builder("onDeviceImageCaptioningCreateLogEvent");
        zzbk zzbkVar87 = new zzbk();
        zzbkVar87.zza(90);
        zzaJ = builder87.withProperty(zzbkVar87.zzb()).build();
        FieldDescriptor.Builder builder88 = FieldDescriptor.builder("onDeviceImageCaptioningLoadLogEvent");
        zzbk zzbkVar88 = new zzbk();
        zzbkVar88.zza(91);
        zzaK = builder88.withProperty(zzbkVar88.zzb()).build();
        FieldDescriptor.Builder builder89 = FieldDescriptor.builder("onDeviceImageCaptioningInferenceLogEvent");
        zzbk zzbkVar89 = new zzbk();
        zzbkVar89.zza(92);
        zzaL = builder89.withProperty(zzbkVar89.zzb()).build();
        FieldDescriptor.Builder builder90 = FieldDescriptor.builder("aggregatedOnDeviceImageCaptioningInferenceLogEvent");
        zzbk zzbkVar90 = new zzbk();
        zzbkVar90.zza(93);
        zzaM = builder90.withProperty(zzbkVar90.zzb()).build();
        FieldDescriptor.Builder builder91 = FieldDescriptor.builder("onDeviceDocumentDetectionCreateLogEvent");
        zzbk zzbkVar91 = new zzbk();
        zzbkVar91.zza(94);
        zzaN = builder91.withProperty(zzbkVar91.zzb()).build();
        FieldDescriptor.Builder builder92 = FieldDescriptor.builder("onDeviceDocumentDetectionLoadLogEvent");
        zzbk zzbkVar92 = new zzbk();
        zzbkVar92.zza(95);
        zzaO = builder92.withProperty(zzbkVar92.zzb()).build();
        FieldDescriptor.Builder builder93 = FieldDescriptor.builder("onDeviceDocumentDetectionLogEvent");
        zzbk zzbkVar93 = new zzbk();
        zzbkVar93.zza(96);
        zzaP = builder93.withProperty(zzbkVar93.zzb()).build();
        FieldDescriptor.Builder builder94 = FieldDescriptor.builder("aggregatedOnDeviceDocumentDetectionLogEvent");
        zzbk zzbkVar94 = new zzbk();
        zzbkVar94.zza(97);
        zzaQ = builder94.withProperty(zzbkVar94.zzb()).build();
        FieldDescriptor.Builder builder95 = FieldDescriptor.builder("onDeviceDocumentCroppingCreateLogEvent");
        zzbk zzbkVar95 = new zzbk();
        zzbkVar95.zza(98);
        zzaR = builder95.withProperty(zzbkVar95.zzb()).build();
        FieldDescriptor.Builder builder96 = FieldDescriptor.builder("onDeviceDocumentCroppingLoadLogEvent");
        zzbk zzbkVar96 = new zzbk();
        zzbkVar96.zza(99);
        zzaS = builder96.withProperty(zzbkVar96.zzb()).build();
        FieldDescriptor.Builder builder97 = FieldDescriptor.builder("onDeviceDocumentCroppingLogEvent");
        zzbk zzbkVar97 = new zzbk();
        zzbkVar97.zza(100);
        zzaT = builder97.withProperty(zzbkVar97.zzb()).build();
        FieldDescriptor.Builder builder98 = FieldDescriptor.builder("aggregatedOnDeviceDocumentCroppingLogEvent");
        zzbk zzbkVar98 = new zzbk();
        zzbkVar98.zza(101);
        zzaU = builder98.withProperty(zzbkVar98.zzb()).build();
        FieldDescriptor.Builder builder99 = FieldDescriptor.builder("onDeviceDocumentEnhancementCreateLogEvent");
        zzbk zzbkVar99 = new zzbk();
        zzbkVar99.zza(102);
        zzaV = builder99.withProperty(zzbkVar99.zzb()).build();
        FieldDescriptor.Builder builder100 = FieldDescriptor.builder("onDeviceDocumentEnhancementLoadLogEvent");
        zzbk zzbkVar100 = new zzbk();
        zzbkVar100.zza(103);
        zzaW = builder100.withProperty(zzbkVar100.zzb()).build();
        FieldDescriptor.Builder builder101 = FieldDescriptor.builder("onDeviceDocumentEnhancementLogEvent");
        zzbk zzbkVar101 = new zzbk();
        zzbkVar101.zza(104);
        zzaX = builder101.withProperty(zzbkVar101.zzb()).build();
        FieldDescriptor.Builder builder102 = FieldDescriptor.builder("aggregatedOnDeviceDocumentEnhancementLogEvent");
        zzbk zzbkVar102 = new zzbk();
        zzbkVar102.zza(105);
        zzaY = builder102.withProperty(zzbkVar102.zzb()).build();
        FieldDescriptor.Builder builder103 = FieldDescriptor.builder("scannerAutoZoomEvent");
        zzbk zzbkVar103 = new zzbk();
        zzbkVar103.zza(106);
        zzaZ = builder103.withProperty(zzbkVar103.zzb()).build();
    }

    private zzgh() {
    }

    @Override // com.google.firebase.encoders.Encoder
    public final /* bridge */ /* synthetic */ void encode(Object obj, ObjectEncoderContext objectEncoderContext) throws IOException {
        zzli zzliVar = (zzli) obj;
        ObjectEncoderContext objectEncoderContext2 = objectEncoderContext;
        objectEncoderContext2.add(zzb, zzliVar.zzf());
        objectEncoderContext2.add(zzc, zzliVar.zzd());
        objectEncoderContext2.add(zzd, (Object) null);
        objectEncoderContext2.add(zze, (Object) null);
        objectEncoderContext2.add(zzf, zzliVar.zze());
        objectEncoderContext2.add(zzg, (Object) null);
        objectEncoderContext2.add(zzh, (Object) null);
        objectEncoderContext2.add(zzi, (Object) null);
        objectEncoderContext2.add(zzj, (Object) null);
        objectEncoderContext2.add(zzk, (Object) null);
        objectEncoderContext2.add(zzl, (Object) null);
        objectEncoderContext2.add(zzm, (Object) null);
        objectEncoderContext2.add(zzn, (Object) null);
        objectEncoderContext2.add(zzo, (Object) null);
        objectEncoderContext2.add(zzp, (Object) null);
        objectEncoderContext2.add(zzq, (Object) null);
        objectEncoderContext2.add(zzr, (Object) null);
        objectEncoderContext2.add(zzs, (Object) null);
        objectEncoderContext2.add(zzt, (Object) null);
        objectEncoderContext2.add(zzu, (Object) null);
        objectEncoderContext2.add(zzv, (Object) null);
        objectEncoderContext2.add(zzw, (Object) null);
        objectEncoderContext2.add(zzx, (Object) null);
        objectEncoderContext2.add(zzy, (Object) null);
        objectEncoderContext2.add(zzz, (Object) null);
        objectEncoderContext2.add(zzA, (Object) null);
        objectEncoderContext2.add(zzB, (Object) null);
        objectEncoderContext2.add(zzC, (Object) null);
        objectEncoderContext2.add(zzD, (Object) null);
        objectEncoderContext2.add(zzE, (Object) null);
        objectEncoderContext2.add(zzF, (Object) null);
        objectEncoderContext2.add(zzG, (Object) null);
        objectEncoderContext2.add(zzH, (Object) null);
        objectEncoderContext2.add(zzI, (Object) null);
        objectEncoderContext2.add(zzJ, (Object) null);
        objectEncoderContext2.add(zzK, (Object) null);
        objectEncoderContext2.add(zzL, (Object) null);
        objectEncoderContext2.add(zzM, (Object) null);
        objectEncoderContext2.add(zzN, zzliVar.zzb());
        objectEncoderContext2.add(zzO, zzliVar.zza());
        objectEncoderContext2.add(zzP, (Object) null);
        objectEncoderContext2.add(zzQ, (Object) null);
        objectEncoderContext2.add(zzR, (Object) null);
        objectEncoderContext2.add(zzS, (Object) null);
        objectEncoderContext2.add(zzT, (Object) null);
        objectEncoderContext2.add(zzU, (Object) null);
        objectEncoderContext2.add(zzV, (Object) null);
        objectEncoderContext2.add(zzW, (Object) null);
        objectEncoderContext2.add(zzX, (Object) null);
        objectEncoderContext2.add(zzY, (Object) null);
        objectEncoderContext2.add(zzZ, (Object) null);
        objectEncoderContext2.add(zzaa, (Object) null);
        objectEncoderContext2.add(zzab, zzliVar.zzc());
        objectEncoderContext2.add(zzac, (Object) null);
        objectEncoderContext2.add(zzad, (Object) null);
        objectEncoderContext2.add(zzae, (Object) null);
        objectEncoderContext2.add(zzaf, (Object) null);
        objectEncoderContext2.add(zzag, (Object) null);
        objectEncoderContext2.add(zzah, (Object) null);
        objectEncoderContext2.add(zzai, (Object) null);
        objectEncoderContext2.add(zzaj, (Object) null);
        objectEncoderContext2.add(zzak, (Object) null);
        objectEncoderContext2.add(zzal, (Object) null);
        objectEncoderContext2.add(zzam, (Object) null);
        objectEncoderContext2.add(zzan, (Object) null);
        objectEncoderContext2.add(zzao, (Object) null);
        objectEncoderContext2.add(zzap, (Object) null);
        objectEncoderContext2.add(zzaq, (Object) null);
        objectEncoderContext2.add(zzar, (Object) null);
        objectEncoderContext2.add(zzas, (Object) null);
        objectEncoderContext2.add(zzat, (Object) null);
        objectEncoderContext2.add(zzau, (Object) null);
        objectEncoderContext2.add(zzav, (Object) null);
        objectEncoderContext2.add(zzaw, (Object) null);
        objectEncoderContext2.add(zzax, (Object) null);
        objectEncoderContext2.add(zzay, (Object) null);
        objectEncoderContext2.add(zzaz, (Object) null);
        objectEncoderContext2.add(zzaA, (Object) null);
        objectEncoderContext2.add(zzaB, (Object) null);
        objectEncoderContext2.add(zzaC, (Object) null);
        objectEncoderContext2.add(zzaD, (Object) null);
        objectEncoderContext2.add(zzaE, (Object) null);
        objectEncoderContext2.add(zzaF, (Object) null);
        objectEncoderContext2.add(zzaG, (Object) null);
        objectEncoderContext2.add(zzaH, (Object) null);
        objectEncoderContext2.add(zzaI, (Object) null);
        objectEncoderContext2.add(zzaJ, (Object) null);
        objectEncoderContext2.add(zzaK, (Object) null);
        objectEncoderContext2.add(zzaL, (Object) null);
        objectEncoderContext2.add(zzaM, (Object) null);
        objectEncoderContext2.add(zzaN, (Object) null);
        objectEncoderContext2.add(zzaO, (Object) null);
        objectEncoderContext2.add(zzaP, (Object) null);
        objectEncoderContext2.add(zzaQ, (Object) null);
        objectEncoderContext2.add(zzaR, (Object) null);
        objectEncoderContext2.add(zzaS, (Object) null);
        objectEncoderContext2.add(zzaT, (Object) null);
        objectEncoderContext2.add(zzaU, (Object) null);
        objectEncoderContext2.add(zzaV, (Object) null);
        objectEncoderContext2.add(zzaW, (Object) null);
        objectEncoderContext2.add(zzaX, (Object) null);
        objectEncoderContext2.add(zzaY, (Object) null);
        objectEncoderContext2.add(zzaZ, (Object) null);
    }
}
